name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: 18.x
  PG_VERSION: 16

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 8.x
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run lint
        run: pnpm lint

  typecheck:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 8.x
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run type checks (all packages)
        run: pnpm run typecheck

  test_web:
    name: Test Web
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 8.x
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run Web tests
        run: pnpm --filter @titan-pomade/web test

  test_api:
    name: Test API
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:${{ env.PG_VERSION }}
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 8.x
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Set up environment
        run: |
          echo "# Auto-generated for CI" > .env
          echo "DATABASE_URL=postgresql://test:test@localhost:5432/test" >> .env
      - name: Generate Prisma client
        run: pnpm --filter @titan-pomade/api db:generate
      - name: Run API tests
        run: pnpm --filter @titan-pomade/api test

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, typecheck, test_web, test_api]
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 8.x
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build application (web + api)
        run: pnpm build

  pr_summary:
    if: github.event_name == 'pull_request'
    name: PR Summary
    runs-on: ubuntu-latest
    needs: [lint, typecheck, test_web, test_api, build]
    steps:
      - name: Post summary comment
        uses: actions/github-script@v7
        with:
          script: |
            const jobs = [
              'lint', 'typecheck', 'test_web', 'test_api', 'build'
            ];
            const lines = jobs.map(j => `- ${j}: âœ… passed`).join('\n');
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `CI Summary:\n${lines}`
            });
